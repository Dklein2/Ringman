<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>RotaryLeft</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if(audio_is_playing(pigManBgm))
{
audio_sound_gain(pigManBgm, 0, 3000);
audio_stop_sound(pigManBgm);
}
if(audio_is_playing(flyToLiveFull))
{
audio_sound_gain(flyToLiveFull, 0, 3000);
audio_stop_sound(flyToLiveFull);
}
if(audio_is_playing(flyToLiveLoop))
{
audio_sound_gain(flyToLiveLoop, 0, 3000);
}
audio_play_sound(flyToLiveAct2,10,false);
//audio_sound_gain(flyToLiveAct2, 0, 0);
//audio_sound_gain(flyToLiveAct2, 1, 2000);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>audio_stop_sound(flyToLiveLoop);
audio_stop_sound(flyToLiveFull);
audio_sound_gain(pigManBgm,1,0);
audio_stop_sound(pigManBgm);
audio_sound_gain(flyToLiveLoop,1,0);
audio_sound_gain(flyToLiveFull,1,0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string> if(RotaryLeftObj.x &lt;= ((background_width[0]/2)-2))
        {
            move_towards_point((background_width[0]/2),650,7);
        }
        else if (RotaryLeftObj.x &gt;= ((background_width[0]/2)-2))
        {
         RotaryLeftObj.x = (background_width[0]/2);
         RotaryLeftObj.y =650;
        }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>125,125</point>
    <point>125,125</point>
  </PhysicsShapePoints>
</object>
